---

# iBio version of edx-datastores.yml by @feanil from Open edX
# This playbook builds all 'datastore' type apps on a pre-existing EC2 instance,
# which is meant to work alongside a 'stateless' EC2 instance running main apps like edxapp, forums, etc.
#
# Important note: this playbook is customized to work with a pre-existing AWS RDS MySQL instance,
# whose endpoint I set in server-vars.yml as RDS_MYSQL_HOST.
# This is different from the original edx-datastores.yml, which builds a local MySQL.
#
# This playbook expects the private subnet IP of datastores EC2 instance to
# be defined in the hosts file under the "datastores_internal" group.
#
# A final caveat is that many would say, with some accuracy, that I don't know what I'm doing.


- name: Configure instance(s)
  hosts: datastores
  sudo: True
  gather_facts: True

  vars:
    OPENEDX_RELEASE: 'open-release/ficus.master'
    MONGO_BIND_IP: "{{ aws_datastore_private_ip }}"
    aws_datastore_private_ip: "{{ groups['datastores_internal'][0] }}"
    # Not sure if I need these but setting explicitly anyways...
    edx_platform_version: 'open-release/ficus.master'
    certs_version: '{{ OPENEDX_RELEASE | default("master") }}'
    forum_version: '{{ OPENEDX_RELEASE | default("master") }}'
    xqueue_version: '{{ OPENEDX_RELEASE | default("master") }}'
    demo_version: '{{ OPENEDX_RELEASE | default("master") }}'

  vars_files:
    - "../roles/edxapp/defaults/main.yml"
    - "../roles/forum/defaults/main.yml"
    - "../roles/xqueue/defaults/main.yml"
    - "../roles/programs/defaults/main.yml"
    - "../roles/analytics_pipeline/defaults/main.yml"
    - "../roles/analytics_api/defaults/main.yml"
    - "../roles/hive/defaults/main.yml"

  roles:
    - role: memcache
    - role: mongo
    - role: rabbitmq
      rabbitmq_ip: "{{aws_datastore_private_ip}}"
    - role: oraclejdk
    - role: elasticsearch
    - role: ibio-rds  #instead of edxlocal
    - role: edx_ansible
    - role: datadog
      when: COMMON_ENABLE_DATADOG
    - role: splunkforwarder
      when: COMMON_ENABLE_SPLUNKFORWARDER
    - role: newrelic
      when: COMMON_ENABLE_NEWRELIC
