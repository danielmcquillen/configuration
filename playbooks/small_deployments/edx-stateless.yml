---

# Stateless app server configuration, designed to be used with external mysql,
# mongo, rabbitmq, and elasticsearch services.
- name: EdX Bootstrap instance(s)
  hosts: stateless
  gather_facts: no
  become: True
  roles:
    - python


# Since we run everything from Ansible, we have to use our own play to install
# some of the things that would have been installed by sandbox.sh (if one was building Ubuntu native)
- name: iBio Bootstrap instance(s)
  hosts: stateless
  gather_facts: no
  become: True
  roles:
    - ibio-bootstrap


# At this point the stateless server should be bootstrapped and ready for the
# various edx applications to be installed
- name: Configure instance(s)
  hosts: stateless
  become: True
  gather_facts: True

  vars:
    # These settings are in the edx version of edx-stateless
    migrate_db: 'yes'
    openid_workaround: True
    EDXAPP_LMS_NGINX_PORT: '80'
    ENABLE_ECOMMERCE: False  # Disable ecommerce by default

    # These are iBio specific settings for stateless
    aws_datastore_private_ip: "{{ groups['datastores_internal'][0] }}"
    OPENEDX_RELEASE: 'open-release/ficus.master'
    edx_platform_version: '{{ OPENEDX_RELEASE | default("master") }}'
    certs_version: '{{ OPENEDX_RELEASE | default("master") }}'
    forum_version: '{{ OPENEDX_RELEASE | default("master") }}'
    xqueue_version: '{{ OPENEDX_RELEASE | default("master") }}'
    demo_version: '{{ OPENEDX_RELEASE | default("master") }}'
    EDXAPP_MYSQL_HOST: "{{ RDS_MYSQL_HOST }}"
    EDXAPP_MYSQL_CSMH_HOST: "{{ RDS_MYSQL_HOST }}"
    EDXAPP_ELASTIC_SEARCH_CONFIG:
      - host: "{{ aws_datastore_private_ip }}"
        port: 9200
    EDXAPP_MEMCACHE: ["{{ aws_datastore_private_ip }}:11211"]
    EDXAPP_MONGO_HOSTS:
      - "{{ aws_datastore_private_ip }}"
    #DISCOVERY_MEMCACHE: ["{{ aws_datastore_private_ip }}:11211"]
    # elasticsearch
    # docs say you don't have to include port, but I found you actually do otherwise make command in discovery fails
    # when trying to call ES on AWS.
    #DISCOVERY_ELASTICSEARCH_URL: "{{aws_datastore_private_ip}}:9200"
    EDXAPP_RABBIT_HOSTNAME: "{{ aws_datastore_private_ip }}"
    FORUM_ELASTICSEARCH_HOST: "{{ aws_datastore_private_ip }}"
    XQUEUE_RABBITMQ_HOSTNAME: "{{ aws_datastore_private_ip }}"
    XQUEUE_MYSQL_HOST: "{{ RDS_MYSQL_HOST }}"
    # We need an array for these MONGO Settings, so use the
    # whole "datastores" group, even though there's only one
    FORUM_MONGO_HOSTS:
      - "{{ aws_datastore_private_ip }}"
    FORUM_SINATRA_ENV: "production"
    FORUM_RACK_ENV: "production"


  pre_tasks:
    - name: Report private IP stateless will use for datastores
      debug:
        msg: "We'll use this IP to set the datastore IP {{ aws_datastore_private_ip }}"

    - name: Forum sanity check
      debug:
        msg: "FORUM_MONGO_URL is {{ FORUM_MONGO_URL }}"

    - name: Forum sanity check part 2
      debug:
        msg: "FORUM_MONGO_HOSTS is {{ FORUM_ELASTICSEARCH_HOST }}"

    - name: Check for migration
      when: migrate_db is defined and migrate_db|lower == "yes"
      debug:
        msg: "IMPORTANT: We're going to attempt to migrate the DB!"

  roles:

    # Ensure we have no known security vulnerabilities
    - security

    # Server setup
    - swapfile

    # Nginx reverse proxy
    - role: nginx
      nginx_sites:
      - certs
      - cms
      - lms
      - forum
      - xqueue
      nginx_default_sites:
      - lms

    # Main EdX application
    # https://github.com/edx/edx-platform
    - role: edxapp
      celery_worker: True
    - edxapp

    # Discussion forums
    # https://github.com/edx/cs_comments_service
    - forum

    # Discovery
    # https://github.com/edx/discover
    # We need this to group courses into larger "Catalogs"
    # Having an issue with this when building ficus. Commenting out for now
    # - discovery

    # Notifications service
    # https://github.com/edx/notifier
    - role: notifier
      NOTIFIER_DIGEST_TASK_INTERVAL: '5'

    # XQueue interface for communicating with external grader services
    # https://github.com/edx/xqueue
    - role: xqueue
      update_users: True

    # Certificate generation
    # https://github.com/edx/edx-certificates
    - certs

    # Email sending
    - postfix_queue

    # Copy logs to AWS -- let's hold on this...there might
    # be a better way to manage logs
    #- aws


    # memcached
    - role: memcache
      when: "'localhost' in ' '.join(EDXAPP_MEMCACHE)"

    # Optional extras
    - role: datadog
      when: COMMON_ENABLE_DATADOG
    - role: splunkforwarder
      when: COMMON_ENABLE_SPLUNKFORWARDER
    - role: newrelic
      when: COMMON_ENABLE_NEWRELIC
